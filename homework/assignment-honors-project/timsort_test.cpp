/* 
Name: Spencer Owens
Class: 23F CS-311 Data Structures and Algorithms
Assignment: Tim Sort Test (Honors Project)
Created: 2023-Dec-04
Updated: 2023-Dec-08
File Name: timsort_test.cpp
File Function:
Version History:
- v1:
*/

// Uses the "doctest" unit-testing framework, version 2
// Requires doctest.h, timsort.hpp

// Includes for code to be tested
#include "timsort.hpp"

// Includes for the "doctest" unit-testing framework
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN

// For doctest framework
#include "doctest.h"

// *********************************************************************
// Test Cases
// *********************************************************************

TEST_CASE("Testing various sizes of sorts")
{
    SUBCASE("Testing vector size < 1000") {
        {
        INFO("Sorting size 10");
        vector<int> vector_u = {943, 334, 366, 86, 703, 777, 76, 437, 842, 120};
        vector<int> vector_o = {76, 86, 120, 334, 366, 437, 703, 777, 842, 943};
        timSort(vector_u);
        REQUIRE(vector_u == vector_o);
        }
        {
        INFO("Sorting size 100");
        vector<int> vector_u = {547, 419, 530, 101, 69, 828, 107, 394, 544, 179, 679, 61, 298, 831, 991, 559, 355, 881, 225, 547, 429, 409, 436, 881, 630, 720, 129, 358, 723, 313, 23, 270, 732, 906, 372, 153, 734, 831, 548, 630, 363, 579, 691, 13, 410, 34, 924, 765, 267, 149, 664, 48, 558, 100, 930, 540, 173, 411, 898, 896, 76, 273, 519, 160, 179, 243, 314, 265, 74, 862, 895, 789, 793, 938, 802, 203, 973, 78, 320, 592, 227, 984, 993, 137, 436, 923, 677, 609, 686, 927, 858, 763, 201, 377, 275, 380, 620, 589, 646, 46};
        vector<int> vector_o = {13, 23, 34, 46, 48, 61, 69, 74, 76, 78, 100, 101, 107, 129, 137, 149, 153, 160, 173, 179, 179, 201, 203, 225, 227, 243, 265, 267, 270, 273, 275, 298, 313, 314, 320, 355, 358, 363, 372, 377, 380, 394, 409, 410, 411, 419, 429, 436, 436, 519, 530, 540, 544, 547, 547, 548, 558, 559, 579, 589, 592, 609, 620, 630, 630, 646, 664, 677, 679, 686, 691, 720, 723, 732, 734, 763, 765, 789, 793, 802, 828, 831, 831, 858, 862, 881, 881, 895, 896, 898, 906, 923, 924, 927, 930, 938, 973, 984, 991, 993};
        timSort(vector_u);
        REQUIRE(vector_u == vector_o);
        }
        {
        INFO("Sorting size 1000");
        vector<int> vector_u = {627, 430, 232, 863, 466, 451, 646, 712, 269, 734, 76, 169, 246, 629, 882, 643, 591, 94, 413, 132, 481, 268, 558, 731, 923, 571, 420, 563, 849, 5, 935, 828, 787, 519, 692, 253, 971, 338, 966, 592, 424, 394, 113, 670, 375, 995, 666, 967, 441, 431, 99, 274, 699, 9, 5, 975, 580, 778, 538, 430, 783, 825, 258, 922, 697, 950, 176, 20, 640, 494, 612, 65, 240, 77, 87, 615, 425, 105, 934, 866, 536, 34, 141, 588, 43, 498, 563, 976, 276, 453, 406, 411, 631, 664, 334, 680, 967, 862, 52, 959, 356, 16, 376, 948, 93, 816, 563, 518, 921, 498, 385, 810, 884, 526, 398, 279, 24, 313, 255, 653, 118, 661, 64, 101, 678, 750, 781, 997, 612, 833, 308, 320, 849, 685, 268, 943, 853, 184, 813, 774, 682, 198, 936, 918, 76, 686, 549, 453, 999, 805, 458, 470, 818, 522, 571, 848, 273, 353, 845, 237, 538, 506, 558, 388, 191, 178, 683, 396, 362, 496, 522, 396, 47, 459, 314, 475, 145, 864, 280, 145, 21, 738, 615, 839, 613, 186, 40, 238, 891, 237, 475, 430, 743, 385, 170, 286, 564, 205, 682, 926, 53, 205, 323, 100, 664, 989, 928, 809, 205, 208, 306, 226, 299, 273, 418, 912, 812, 458, 150, 55, 47, 625, 837, 791, 11, 7, 77, 927, 212, 112, 853, 618, 317, 528, 718, 981, 870, 998, 142, 75, 207, 801, 654, 506, 74, 424, 770, 238, 234, 920, 294, 281, 545, 131, 72, 908, 139, 502, 835, 703, 614, 41, 321, 931, 921, 392, 264, 791, 742, 758, 219, 301, 559, 225, 159, 986, 649, 929, 224, 883, 849, 518, 164, 747, 650, 589, 7, 141, 443, 843, 196, 57, 236, 870, 340, 157, 614, 956, 301, 356, 714, 872, 658, 274, 97, 817, 260, 746, 747, 836, 629, 948, 355, 145, 695, 357, 734, 703, 498, 177, 898, 694, 586, 134, 916, 926, 643, 530, 234, 296, 887, 949, 168, 897, 575, 265, 714, 187, 11, 813, 23, 992, 114, 730, 138, 161, 87, 872, 864, 585, 402, 114, 632, 988, 600, 548, 267, 244, 79, 501, 892, 318, 802, 61, 215, 729, 678, 281, 916, 690, 447, 292, 34, 561, 374, 172, 74, 462, 397, 939, 399, 799, 405, 383, 787, 6, 932, 406, 602, 363, 908, 494, 33, 710, 907, 600, 440, 586, 881, 708, 628, 680, 352, 662, 593, 727, 835, 668, 541, 584, 959, 940, 383, 364, 324, 522, 722, 608, 929, 676, 323, 837, 171, 356, 899, 430, 956, 691, 16, 189, 752, 996, 870, 456, 659, 815, 535, 846, 483, 76, 430, 442, 369, 165, 159, 45, 687, 881, 653, 968, 910, 328, 157, 81, 684, 57, 863, 992, 100, 232, 181, 204, 228, 403, 661, 887, 219, 196, 733, 54, 625, 515, 849, 994, 680, 8, 391, 720, 241, 396, 688, 151, 724, 846, 584, 408, 255, 448, 400, 355, 680, 933, 560, 908, 689, 573, 148, 908, 769, 233, 314, 746, 749, 163, 92, 781, 171, 483, 501, 765, 879, 190, 268, 603, 388, 853, 363, 643, 653, 115, 350, 685, 49, 262, 945, 738, 835, 93, 998, 957, 679, 312, 703, 428, 476, 796, 209, 999, 279, 63, 116, 511, 605, 385, 114, 993, 590, 478, 636, 243, 593, 986, 280, 994, 249, 225, 84, 436, 671, 82, 393, 350, 747, 449, 130, 575, 245, 691, 574, 876, 754, 691, 387, 359, 428, 854, 352, 18, 332, 340, 613, 277, 327, 893, 624, 928, 470, 708, 716, 493, 143, 110, 195, 890, 911, 325, 465, 156, 17, 391, 384, 123, 434, 124, 483, 862, 978, 187, 232, 662, 528, 845, 291, 207, 90, 915, 487, 913, 976, 203, 406, 119, 665, 602, 361, 576, 279, 826, 84, 648, 569, 469, 772, 4, 945, 607, 866, 275, 794, 451, 937, 322, 296, 580, 881, 739, 496, 368, 652, 824, 572, 410, 943, 237, 364, 304, 166, 644, 482, 250, 292, 51, 71, 416, 55, 16, 23, 274, 291, 818, 725, 580, 492, 373, 513, 374, 112, 9, 742, 764, 833, 666, 527, 128, 256, 891, 432, 422, 887, 914, 672, 532, 317, 744, 948, 373, 112, 972, 647, 756, 142, 724, 336, 634, 97, 849, 360, 210, 210, 455, 326, 395, 121, 853, 875, 729, 97, 307, 151, 984, 573, 176, 516, 891, 272, 465, 616, 384, 789, 615, 140, 283, 339, 829, 917, 436, 30, 630, 998, 593, 85, 325, 340, 558, 530, 216, 288, 627, 875, 791, 612, 801, 967, 128, 44, 239, 945, 660, 624, 86, 627, 116, 369, 966, 297, 639, 754, 328, 269, 753, 273, 706, 430, 613, 264, 960, 829, 904, 940, 57, 696, 552, 858, 15, 32, 902, 255, 330, 914, 231, 416, 541, 699, 138, 859, 997, 777, 613, 677, 398, 718, 950, 456, 148, 915, 720, 461, 97, 977, 401, 154, 673, 305, 364, 40, 337, 618, 295, 667, 532, 878, 436, 425, 930, 574, 284, 927, 703, 249, 956, 453, 968, 906, 909, 116, 173, 981, 929, 270, 958, 330, 776, 983, 635, 140, 24, 325, 758, 671, 344, 290, 902, 132, 67, 832, 58, 351, 111, 761, 601, 67, 214, 569, 325, 123, 37, 498, 105, 319, 769, 415, 649, 545, 399, 637, 686, 775, 314, 796, 446, 10, 439, 348, 143, 506, 532, 201, 210, 643, 315, 811, 710, 881, 732, 35, 357, 121, 534, 814, 440, 655, 229, 442, 200, 980, 431, 238, 755, 97, 35, 554, 107, 474, 254, 602, 332, 787, 804, 542, 430, 471, 705, 493, 352, 437, 528, 61, 911, 414, 875, 351, 69, 105, 145, 622, 437, 576, 860, 193, 673, 247, 747, 133, 73, 1, 735, 406, 788, 539, 300, 571, 362, 6, 64, 67, 443, 944, 128, 706, 359, 4, 58, 428, 461, 555, 50, 898, 132, 263, 91, 157, 862, 190, 290, 936, 192, 26, 694, 332, 917, 994, 255, 280, 352, 319, 699, 796, 616, 827, 854, 975, 831, 912, 403, 292, 468, 806, 543, 952, 421};
        vector<int> vector_o = {1, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 10, 11, 11, 15, 16, 16, 16, 17, 18, 20, 21, 23, 23, 24, 24, 26, 30, 32, 33, 34, 34, 35, 35, 37, 40, 40, 41, 43, 44, 45, 47, 47, 49, 50, 51, 52, 53, 54, 55, 55, 57, 57, 57, 58, 58, 61, 61, 63, 64, 64, 65, 67, 67, 67, 69, 71, 72, 73, 74, 74, 75, 76, 76, 76, 77, 77, 79, 81, 82, 84, 84, 85, 86, 87, 87, 90, 91, 92, 93, 93, 94, 97, 97, 97, 97, 97, 99, 100, 100, 101, 105, 105, 105, 107, 110, 111, 112, 112, 112, 113, 114, 114, 114, 115, 116, 116, 116, 118, 119, 121, 121, 123, 123, 124, 128, 128, 128, 130, 131, 132, 132, 132, 133, 134, 138, 138, 139, 140, 140, 141, 141, 142, 142, 143, 143, 145, 145, 145, 145, 148, 148, 150, 151, 151, 154, 156, 157, 157, 157, 159, 159, 161, 163, 164, 165, 166, 168, 169, 170, 171, 171, 172, 173, 176, 176, 177, 178, 181, 184, 186, 187, 187, 189, 190, 190, 191, 192, 193, 195, 196, 196, 198, 200, 201, 203, 204, 205, 205, 205, 207, 207, 208, 209, 210, 210, 210, 212, 214, 215, 216, 219, 219, 224, 225, 225, 226, 228, 229, 231, 232, 232, 232, 233, 234, 234, 236, 237, 237, 237, 238, 238, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 249, 250, 253, 254, 255, 255, 255, 255, 256, 258, 260, 262, 263, 264, 264, 265, 267, 268, 268, 268, 269, 269, 270, 272, 273, 273, 273, 274, 274, 274, 275, 276, 277, 279, 279, 279, 280, 280, 280, 281, 281, 283, 284, 286, 288, 290, 290, 291, 291, 292, 292, 292, 294, 295, 296, 296, 297, 299, 300, 301, 301, 304, 305, 306, 307, 308, 312, 313, 314, 314, 314, 315, 317, 317, 318, 319, 319, 320, 321, 322, 323, 323, 324, 325, 325, 325, 325, 326, 327, 328, 328, 330, 330, 332, 332, 332, 334, 336, 337, 338, 339, 340, 340, 340, 344, 348, 350, 350, 351, 351, 352, 352, 352, 352, 353, 355, 355, 356, 356, 356, 357, 357, 359, 359, 360, 361, 362, 362, 363, 363, 364, 364, 364, 368, 369, 369, 373, 373, 374, 374, 375, 376, 383, 383, 384, 384, 385, 385, 385, 387, 388, 388, 391, 391, 392, 393, 394, 395, 396, 396, 396, 397, 398, 398, 399, 399, 400, 401, 402, 403, 403, 405, 406, 406, 406, 406, 408, 410, 411, 413, 414, 415, 416, 416, 418, 420, 421, 422, 424, 424, 425, 425, 428, 428, 428, 430, 430, 430, 430, 430, 430, 430, 431, 431, 432, 434, 436, 436, 436, 437, 437, 439, 440, 440, 441, 442, 442, 443, 443, 446, 447, 448, 449, 451, 451, 453, 453, 453, 455, 456, 456, 458, 458, 459, 461, 461, 462, 465, 465, 466, 468, 469, 470, 470, 471, 474, 475, 475, 476, 478, 481, 482, 483, 483, 483, 487, 492, 493, 493, 494, 494, 496, 496, 498, 498, 498, 498, 501, 501, 502, 506, 506, 506, 511, 513, 515, 516, 518, 518, 519, 522, 522, 522, 526, 527, 528, 528, 528, 530, 530, 532, 532, 532, 534, 535, 536, 538, 538, 539, 541, 541, 542, 543, 545, 545, 548, 549, 552, 554, 555, 558, 558, 558, 559, 560, 561, 563, 563, 563, 564, 569, 569, 571, 571, 571, 572, 573, 573, 574, 574, 575, 575, 576, 576, 580, 580, 580, 584, 584, 585, 586, 586, 588, 589, 590, 591, 592, 593, 593, 593, 600, 600, 601, 602, 602, 602, 603, 605, 607, 608, 612, 612, 612, 613, 613, 613, 613, 614, 614, 615, 615, 615, 616, 616, 618, 618, 622, 624, 624, 625, 625, 627, 627, 627, 628, 629, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 643, 643, 643, 643, 644, 646, 647, 648, 649, 649, 650, 652, 653, 653, 653, 654, 655, 658, 659, 660, 661, 661, 662, 662, 664, 664, 665, 666, 666, 667, 668, 670, 671, 671, 672, 673, 673, 676, 677, 678, 678, 679, 680, 680, 680, 680, 682, 682, 683, 684, 685, 685, 686, 686, 687, 688, 689, 690, 691, 691, 691, 692, 694, 694, 695, 696, 697, 699, 699, 699, 703, 703, 703, 703, 705, 706, 706, 708, 708, 710, 710, 712, 714, 714, 716, 718, 718, 720, 720, 722, 724, 724, 725, 727, 729, 729, 730, 731, 732, 733, 734, 734, 735, 738, 738, 739, 742, 742, 743, 744, 746, 746, 747, 747, 747, 747, 749, 750, 752, 753, 754, 754, 755, 756, 758, 758, 761, 764, 765, 769, 769, 770, 772, 774, 775, 776, 777, 778, 781, 781, 783, 787, 787, 787, 788, 789, 791, 791, 791, 794, 796, 796, 796, 799, 801, 801, 802, 804, 805, 806, 809, 810, 811, 812, 813, 813, 814, 815, 816, 817, 818, 818, 824, 825, 826, 827, 828, 829, 829, 831, 832, 833, 833, 835, 835, 835, 836, 837, 837, 839, 843, 845, 845, 846, 846, 848, 849, 849, 849, 849, 849, 853, 853, 853, 853, 854, 854, 858, 859, 860, 862, 862, 862, 863, 863, 864, 864, 866, 866, 870, 870, 870, 872, 872, 875, 875, 875, 876, 878, 879, 881, 881, 881, 881, 882, 883, 884, 887, 887, 887, 890, 891, 891, 891, 892, 893, 897, 898, 898, 899, 902, 902, 904, 906, 907, 908, 908, 908, 908, 909, 910, 911, 911, 912, 912, 913, 914, 914, 915, 915, 916, 916, 917, 917, 918, 920, 921, 921, 922, 923, 926, 926, 927, 927, 928, 928, 929, 929, 929, 930, 931, 932, 933, 934, 935, 936, 936, 937, 939, 940, 940, 943, 943, 944, 945, 945, 945, 948, 948, 948, 949, 950, 950, 952, 956, 956, 956, 957, 958, 959, 959, 960, 966, 966, 967, 967, 967, 968, 968, 971, 972, 975, 975, 976, 976, 977, 978, 980, 981, 981, 983, 984, 986, 986, 988, 989, 992, 992, 993, 994, 994, 994, 995, 996, 997, 997, 998, 998, 998, 999, 999};
        timSort(vector_u);
        REQUIRE(vector_u == vector_o);
        }
    }
}

TEST_CASE("Testing size zero and negative numbers")
{
    SUBCASE("Testing vector size 0") {
        {
        INFO("Sorting size 0");
        vector<int> vector_u = {};
        vector<int> vector_o = {};
        timSort(vector_u);
        REQUIRE(vector_u == vector_o);
        }
    }
    SUBCASE("Testing vector size 10 with negative numbers") {
        {
        INFO("Sorting size 10");
        vector<int> vector_u = {-943, 334, 366, -86, 703, 777, 76, 437, 842, 120};
        vector<int> vector_o = {-943, -86, 76, 120, 334, 366, 437, 703, 777, 842};
        timSort(vector_u);
        REQUIRE(vector_u == vector_o);
        }
    }
}